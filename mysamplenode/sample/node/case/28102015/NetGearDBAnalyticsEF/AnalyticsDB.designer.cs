#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetGearDBAnalyticsEF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NGStatus")]
	public partial class AnalyticsDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNGDownloadStatus(NGDownloadStatus instance);
    partial void UpdateNGDownloadStatus(NGDownloadStatus instance);
    partial void DeleteNGDownloadStatus(NGDownloadStatus instance);
    #endregion
		
		public AnalyticsDBDataContext() : 
				base(global::NetGearDBAnalyticsEF.Properties.Settings.Default.NGStatusConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnalyticsDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NGDownloadStatus> NGDownloadStatus
		{
			get
			{
				return this.GetTable<NGDownloadStatus>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGDownloadStatus")]
	public partial class NGDownloadStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _IPAddressV4;
		
		private string _IPAddressV6;
		
		private string _CurrentVersion;
		
		private System.Nullable<System.DateTime> _InstallationDate;
		
		private System.Nullable<bool> _ISUpdated;
		
		private string _UpdatedVersion;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<bool> _ISUnistall;
		
		private System.Nullable<System.DateTime> _UninstallDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnIPAddressV4Changing(string value);
    partial void OnIPAddressV4Changed();
    partial void OnIPAddressV6Changing(string value);
    partial void OnIPAddressV6Changed();
    partial void OnCurrentVersionChanging(string value);
    partial void OnCurrentVersionChanged();
    partial void OnInstallationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationDateChanged();
    partial void OnISUpdatedChanging(System.Nullable<bool> value);
    partial void OnISUpdatedChanged();
    partial void OnUpdatedVersionChanging(string value);
    partial void OnUpdatedVersionChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnISUnistallChanging(System.Nullable<bool> value);
    partial void OnISUnistallChanged();
    partial void OnUninstallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUninstallDateChanged();
    #endregion
		
		public NGDownloadStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressV4", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IPAddressV4
		{
			get
			{
				return this._IPAddressV4;
			}
			set
			{
				if ((this._IPAddressV4 != value))
				{
					this.OnIPAddressV4Changing(value);
					this.SendPropertyChanging();
					this._IPAddressV4 = value;
					this.SendPropertyChanged("IPAddressV4");
					this.OnIPAddressV4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddressV6", DbType="NVarChar(50)")]
		public string IPAddressV6
		{
			get
			{
				return this._IPAddressV6;
			}
			set
			{
				if ((this._IPAddressV6 != value))
				{
					this.OnIPAddressV6Changing(value);
					this.SendPropertyChanging();
					this._IPAddressV6 = value;
					this.SendPropertyChanged("IPAddressV6");
					this.OnIPAddressV6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentVersion", DbType="NVarChar(50)")]
		public string CurrentVersion
		{
			get
			{
				return this._CurrentVersion;
			}
			set
			{
				if ((this._CurrentVersion != value))
				{
					this.OnCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._CurrentVersion = value;
					this.SendPropertyChanged("CurrentVersion");
					this.OnCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstallationDate
		{
			get
			{
				return this._InstallationDate;
			}
			set
			{
				if ((this._InstallationDate != value))
				{
					this.OnInstallationDateChanging(value);
					this.SendPropertyChanging();
					this._InstallationDate = value;
					this.SendPropertyChanged("InstallationDate");
					this.OnInstallationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISUpdated", DbType="Bit")]
		public System.Nullable<bool> ISUpdated
		{
			get
			{
				return this._ISUpdated;
			}
			set
			{
				if ((this._ISUpdated != value))
				{
					this.OnISUpdatedChanging(value);
					this.SendPropertyChanging();
					this._ISUpdated = value;
					this.SendPropertyChanged("ISUpdated");
					this.OnISUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedVersion", DbType="NVarChar(50)")]
		public string UpdatedVersion
		{
			get
			{
				return this._UpdatedVersion;
			}
			set
			{
				if ((this._UpdatedVersion != value))
				{
					this.OnUpdatedVersionChanging(value);
					this.SendPropertyChanging();
					this._UpdatedVersion = value;
					this.SendPropertyChanged("UpdatedVersion");
					this.OnUpdatedVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISUnistall", DbType="Bit")]
		public System.Nullable<bool> ISUnistall
		{
			get
			{
				return this._ISUnistall;
			}
			set
			{
				if ((this._ISUnistall != value))
				{
					this.OnISUnistallChanging(value);
					this.SendPropertyChanging();
					this._ISUnistall = value;
					this.SendPropertyChanged("ISUnistall");
					this.OnISUnistallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UninstallDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UninstallDate
		{
			get
			{
				return this._UninstallDate;
			}
			set
			{
				if ((this._UninstallDate != value))
				{
					this.OnUninstallDateChanging(value);
					this.SendPropertyChanging();
					this._UninstallDate = value;
					this.SendPropertyChanged("UninstallDate");
					this.OnUninstallDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
